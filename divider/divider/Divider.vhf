------------------------------------------------------------------
-- Translated VHDL Source File
-- Auto-Generated By Xilinx's Blf2lang.
-- Copyright (c) 2003. Xilinx, Inc.
------------------------------------------------------------------
--16-bit Divider for EE 119 Serial Divider Board

library IEEE;
use IEEE.std_logic_1164.all;
library aim;
use aim.components.all;
library unisim;
use unisim.Vcomponents.all;

entity Divider is
port (
    Reset : in std_logic;
    CLK : in std_logic;
    KeypadRow0 : in std_logic;
    KeypadRow1 : in std_logic;
    KeypadRow2 : in std_logic;
    KeypadRow3 : in std_logic;
    KeypadCol0 : in std_logic;
    KeypadCol1 : in std_logic;
    KeypadCol2 : in std_logic;
    KeypadCol3 : in std_logic;
    Segmenta : in std_logic;
    Segmentb : in std_logic;
    Segmentc : in std_logic;
    Segmentd : in std_logic;
    Segmente : in std_logic;
    Segmentf : in std_logic;
    Segmentg : in std_logic;
    Digit0 : in std_logic;
    Digit1 : in std_logic;
    Digit2 : in std_logic;
    Digit3 : in std_logic;
    Digit4 : in std_logic;
    Digit5 : in std_logic;
    Digit6 : in std_logic;
    Digit7 : in std_logic;
    Digit8 : in std_logic;
    Digit9 : in std_logic;
    Digit10 : in std_logic;
    Digit11 : in std_logic;
    Calculate : inout std_logic;
    Divisor : inout std_logic;
    KeypadRDY : inout std_logic;
    Keypad0 : inout std_logic;
    Keypad1 : inout std_logic;
    Keypad2 : inout std_logic;
    Keypad3 : inout std_logic;
    HexDigit0 : out std_logic;
    HexDigit1 : out std_logic;
    HexDigit2 : out std_logic;
    HexDigit3 : out std_logic;
    DecoderEn : out std_logic;
    DecoderBit0 : inout std_logic;
    DecoderBit1 : inout std_logic;
    DecoderBit2 : inout std_logic;
    DecoderBit3 : inout std_logic
     );
   attribute optimization_tradeoff : string;
   attribute optimization_effort : string;
   attribute flatten_hierarchy : string;
   attribute fsm_extract : string;
   attribute fsm_encoding : string;
   attribute enum_encoding : string;
   attribute fsm_fftype : string;
   attribute mux_extract : string;
   attribute shift_extract : string;
   attribute pin_assign : string;
   attribute signal_preserve : string;
   attribute dont_optimize : string;
   attribute box_type : string;
   attribute data_gate : string;
   attribute cool_clk : string;
   attribute load_kiss : string;
   attribute open_drain : string;
   attribute pullup : string;
   attribute keeper : string;
   attribute schmitt_trigger : string;
   attribute dual_edge : string;
   attribute inreg : string;
   attribute maxpt : string;
   attribute iostandard : string;
   attribute optimize : string;
   attribute opt_effort : string;
   attribute fast : string;
   attribute slow : string;
   attribute bufg : string;
   attribute io : string;
   attribute loc : string;
   attribute reg : string;
   attribute init : string;
   attribute wireand : string;
   attribute tnm : string;
   attribute keep : string;
   attribute pwr_mode : string;
   attribute source_node : string;
   attribute pulldown : string;
   attribute float : string;

attribute PIN_ASSIGN of Reset : signal is "P4";
attribute PIN_ASSIGN of Calculate : signal is "P5";
attribute PIN_ASSIGN of Divisor : signal is "P6";
attribute PIN_ASSIGN of KeypadRDY : signal is "P33";
attribute PIN_ASSIGN of Keypad0 : signal is "P25";
attribute PIN_ASSIGN of Keypad1 : signal is "P26";
attribute PIN_ASSIGN of Keypad2 : signal is "P31";
attribute PIN_ASSIGN of Keypad3 : signal is "P32";
attribute PIN_ASSIGN of KeypadRow0 : signal is "P14";
attribute PIN_ASSIGN of KeypadRow1 : signal is "P13";
attribute PIN_ASSIGN of KeypadRow2 : signal is "P11";
attribute PIN_ASSIGN of KeypadRow3 : signal is "P7";
attribute PIN_ASSIGN of KeypadCol0 : signal is "P15";
attribute PIN_ASSIGN of KeypadCol1 : signal is "P17";
attribute PIN_ASSIGN of KeypadCol2 : signal is "P18";
attribute PIN_ASSIGN of KeypadCol3 : signal is "P19";
attribute PIN_ASSIGN of HexDigit0 : signal is "P24";
attribute PIN_ASSIGN of HexDigit1 : signal is "P23";
attribute PIN_ASSIGN of HexDigit2 : signal is "P21";
attribute PIN_ASSIGN of HexDigit3 : signal is "P20";
attribute PIN_ASSIGN of Segmenta : signal is "P72";
attribute PIN_ASSIGN of Segmentb : signal is "P71";
attribute PIN_ASSIGN of Segmentc : signal is "P70";
attribute PIN_ASSIGN of Segmentd : signal is "P69";
attribute PIN_ASSIGN of Segmente : signal is "P66";
attribute PIN_ASSIGN of Segmentf : signal is "P65";
attribute PIN_ASSIGN of Segmentg : signal is "P63";
attribute PIN_ASSIGN of DecoderEn : signal is "P44";
attribute PIN_ASSIGN of DecoderBit0 : signal is "P43";
attribute PIN_ASSIGN of DecoderBit1 : signal is "P41";
attribute PIN_ASSIGN of DecoderBit2 : signal is "P40";
attribute PIN_ASSIGN of DecoderBit3 : signal is "P39";
attribute PIN_ASSIGN of Digit0 : signal is "P57";
attribute PIN_ASSIGN of Digit1 : signal is "P56";
attribute PIN_ASSIGN of Digit2 : signal is "P55";
attribute PIN_ASSIGN of Digit3 : signal is "P54";
attribute PIN_ASSIGN of Digit4 : signal is "P53";
attribute PIN_ASSIGN of Digit5 : signal is "P52";
attribute PIN_ASSIGN of Digit6 : signal is "P51";
attribute PIN_ASSIGN of Digit7 : signal is "P50";
attribute PIN_ASSIGN of Digit8 : signal is "P48";
attribute PIN_ASSIGN of Digit9 : signal is "P47";
attribute PIN_ASSIGN of Digit10 : signal is "P46";
attribute PIN_ASSIGN of Digit11 : signal is "P45";
attribute PIN_ASSIGN of CLK : signal is "P9";
end Divider;

architecture equation of Divider is

    signal KeypadRDYS1 : std_logic;
    signal KeypadRDYS2 : std_logic;
    signal KeypadRDYS3 : std_logic;
    signal HaveKey : std_logic;
    signal MuxCntr0 : std_logic;
    signal MuxCntr1 : std_logic;
    signal MuxCntr2 : std_logic;
    signal MuxCntr3 : std_logic;
    signal MuxCntr4 : std_logic;
    signal MuxCntr5 : std_logic;
    signal MuxCntr6 : std_logic;
    signal MuxCntr7 : std_logic;
    signal MuxCntr8 : std_logic;
    signal MuxCntr9 : std_logic;
    signal DigitClkEn : std_logic;
    signal KeyEn : std_logic;
    signal InitEn : std_logic;
    signal RemainderEn : std_logic;
    signal AddSubEn : std_logic;
    signal QuotientEn : std_logic;
    signal CarryEn : std_logic;
    signal CalcLatch : std_logic;
    signal CalcRDYS1 : std_logic;
    signal CalcRDYS2 : std_logic;
    signal CalcRDYS3 : std_logic;
    signal CalcCond : std_logic;
    signal CarryFlag0 : std_logic;
    signal AddSubFlag0 : std_logic;
    signal NewKey0 : std_logic;
    signal NewKey1 : std_logic;
    signal NewKey2 : std_logic;
    signal NewKey3 : std_logic;
    signal Remainder16 : std_logic;
    signal Remainder15 : std_logic;
    signal Remainder14 : std_logic;
    signal Remainder13 : std_logic;
    signal Remainder12 : std_logic;
    signal Remainder11 : std_logic;
    signal Remainder10 : std_logic;
    signal Remainder9 : std_logic;
    signal Remainder8 : std_logic;
    signal Remainder7 : std_logic;
    signal Remainder6 : std_logic;
    signal Remainder5 : std_logic;
    signal Remainder4 : std_logic;
    signal Remainder3 : std_logic;
    signal Remainder2 : std_logic;
    signal Remainder1 : std_logic;
    signal Remainder0 : std_logic;
    signal DBits0 : std_logic;
    signal DBits1 : std_logic;
    signal DBits2 : std_logic;
    signal DBits3 : std_logic;
    signal DBits4 : std_logic;
    signal DBits5 : std_logic;
    signal DBits6 : std_logic;
    signal DBits7 : std_logic;
    signal DBits8 : std_logic;
    signal DBits9 : std_logic;
    signal DBits10 : std_logic;
    signal DBits11 : std_logic;
    signal DBits12 : std_logic;
    signal DBits13 : std_logic;
    signal DBits14 : std_logic;
    signal DBits15 : std_logic;
    signal DBits16 : std_logic;
    signal DBits17 : std_logic;
    signal DBits18 : std_logic;
    signal DBits19 : std_logic;
    signal DBits20 : std_logic;
    signal DBits21 : std_logic;
    signal DBits22 : std_logic;
    signal DBits23 : std_logic;
    signal DBits24 : std_logic;
    signal DBits25 : std_logic;
    signal DBits26 : std_logic;
    signal DBits27 : std_logic;
    signal DBits28 : std_logic;
    signal DBits29 : std_logic;
    signal DBits30 : std_logic;
    signal DBits31 : std_logic;
    signal DBits32 : std_logic;
    signal DBits33 : std_logic;
    signal DBits34 : std_logic;
    signal DBits35 : std_logic;
    signal DBits36 : std_logic;
    signal DBits37 : std_logic;
    signal DBits38 : std_logic;
    signal DBits39 : std_logic;
    signal DBits40 : std_logic;
    signal DBits41 : std_logic;
    signal DBits42 : std_logic;
    signal DBits43 : std_logic;
    signal DBits44 : std_logic;
    signal DBits45 : std_logic;
    signal DBits46 : std_logic;
    signal DBits47 : std_logic;
    signal ShiftHold : std_logic;
    signal ShiftKeyIn : std_logic;
    signal ShiftDisplay : std_logic;
    signal ShiftAddSub : std_logic;
    signal ShiftInit : std_logic;
    signal ShiftRem : std_logic;
    signal ShiftQuo : std_logic;
    signal CARRY_0 : std_logic;
    signal CARRY_1 : std_logic;
    signal NewKey3_xcX1 : std_logic;
    signal NewKey3_xcX2 : std_logic;
    signal Calculate_xcBUF : std_logic;
    signal Calculate_xcOE : std_logic;
    signal Divisor_xcBUF : std_logic;
    signal Divisor_xcOE : std_logic;
    signal KeypadRDY_xcBUF : std_logic;
    signal KeypadRDY_xcOE : std_logic;
    signal Keypad0_xcBUF : std_logic;
    signal Keypad0_xcOE : std_logic;
    signal Keypad1_xcBUF : std_logic;
    signal Keypad1_xcOE : std_logic;
    signal Keypad2_xcBUF : std_logic;
    signal Keypad2_xcOE : std_logic;
    signal Keypad3_xcBUF : std_logic;
    signal Keypad3_xcOE : std_logic;
    signal HexDigit0_xcBUF : std_logic;
    signal HexDigit0_xcOE : std_logic;
    signal HexDigit1_xcBUF : std_logic;
    signal HexDigit1_xcOE : std_logic;
    signal HexDigit2_xcBUF : std_logic;
    signal HexDigit2_xcOE : std_logic;
    signal HexDigit3_xcBUF : std_logic;
    signal HexDigit3_xcOE : std_logic;
    signal DecoderEn_xcBUF : std_logic;
    signal DecoderEn_xcOE : std_logic;
    signal DecoderBit0_xcD : std_logic;
    signal DecoderBit0_xcQ : std_logic;
    signal DecoderBit0_xcOE : std_logic;
    signal DecoderBit0_xcBUF : std_logic;
    signal DecoderBit0_xcCLOCK : std_logic;
    signal DecoderBit1_xcD : std_logic;
    signal DecoderBit1_xcQ : std_logic;
    signal DecoderBit1_xcOE : std_logic;
    signal DecoderBit1_xcBUF : std_logic;
    signal DecoderBit1_xcCLOCK : std_logic;
    signal DecoderBit2_xcD : std_logic;
    signal DecoderBit2_xcQ : std_logic;
    signal DecoderBit2_xcOE : std_logic;
    signal DecoderBit2_xcBUF : std_logic;
    signal DecoderBit2_xcCLOCK : std_logic;
    signal DecoderBit3_xcD : std_logic;
    signal DecoderBit3_xcQ : std_logic;
    signal DecoderBit3_xcOE : std_logic;
    signal DecoderBit3_xcBUF : std_logic;
    signal DecoderBit3_xcCLOCK : std_logic;
    signal KeypadRDYS1_xcD : std_logic;
    signal KeypadRDYS1_xcQ : std_logic;
    signal KeypadRDYS1_xcCLOCK : std_logic;
    signal KeypadRDYS2_xcD : std_logic;
    signal KeypadRDYS2_xcQ : std_logic;
    signal KeypadRDYS2_xcCLOCK : std_logic;
    signal KeypadRDYS3_xcD : std_logic;
    signal KeypadRDYS3_xcQ : std_logic;
    signal KeypadRDYS3_xcCLOCK : std_logic;
    signal HaveKey_xcD : std_logic;
    signal HaveKey_xcQ : std_logic;
    signal HaveKey_xcCLOCK : std_logic;
    signal MuxCntr0_xcD : std_logic;
    signal MuxCntr0_xcQ : std_logic;
    signal MuxCntr0_xcCLOCK : std_logic;
    signal MuxCntr1_xcD : std_logic;
    signal MuxCntr1_xcQ : std_logic;
    signal MuxCntr1_xcCLOCK : std_logic;
    signal MuxCntr2_xcD : std_logic;
    signal MuxCntr2_xcQ : std_logic;
    signal MuxCntr2_xcCLOCK : std_logic;
    signal MuxCntr3_xcD : std_logic;
    signal MuxCntr3_xcQ : std_logic;
    signal MuxCntr3_xcCLOCK : std_logic;
    signal MuxCntr4_xcD : std_logic;
    signal MuxCntr4_xcQ : std_logic;
    signal MuxCntr4_xcCLOCK : std_logic;
    signal MuxCntr5_xcD : std_logic;
    signal MuxCntr5_xcQ : std_logic;
    signal MuxCntr5_xcCLOCK : std_logic;
    signal MuxCntr6_xcD : std_logic;
    signal MuxCntr6_xcQ : std_logic;
    signal MuxCntr6_xcCLOCK : std_logic;
    signal MuxCntr7_xcD : std_logic;
    signal MuxCntr7_xcQ : std_logic;
    signal MuxCntr7_xcCLOCK : std_logic;
    signal MuxCntr8_xcD : std_logic;
    signal MuxCntr8_xcQ : std_logic;
    signal MuxCntr8_xcCLOCK : std_logic;
    signal MuxCntr9_xcD : std_logic;
    signal MuxCntr9_xcQ : std_logic;
    signal MuxCntr9_xcCLOCK : std_logic;
    signal DigitClkEn_xcD : std_logic;
    signal DigitClkEn_xcQ : std_logic;
    signal DigitClkEn_xcCLOCK : std_logic;
    signal KeyEn_xcD : std_logic;
    signal KeyEn_xcQ : std_logic;
    signal KeyEn_xcCLOCK : std_logic;
    signal InitEn_xcD : std_logic;
    signal InitEn_xcQ : std_logic;
    signal InitEn_xcCLOCK : std_logic;
    signal RemainderEn_xcD : std_logic;
    signal RemainderEn_xcQ : std_logic;
    signal RemainderEn_xcCLOCK : std_logic;
    signal AddSubEn_xcD : std_logic;
    signal AddSubEn_xcQ : std_logic;
    signal AddSubEn_xcCLOCK : std_logic;
    signal QuotientEn_xcD : std_logic;
    signal QuotientEn_xcQ : std_logic;
    signal QuotientEn_xcCLOCK : std_logic;
    signal CarryEn_xcD : std_logic;
    signal CarryEn_xcQ : std_logic;
    signal CarryEn_xcCLOCK : std_logic;
    signal CalcLatch_xcD : std_logic;
    signal CalcLatch_xcQ : std_logic;
    signal CalcLatch_xcCLOCK : std_logic;
    signal CalcRDYS1_xcD : std_logic;
    signal CalcRDYS1_xcQ : std_logic;
    signal CalcRDYS1_xcCLOCK : std_logic;
    signal CalcRDYS2_xcD : std_logic;
    signal CalcRDYS2_xcQ : std_logic;
    signal CalcRDYS2_xcCLOCK : std_logic;
    signal CalcRDYS3_xcD : std_logic;
    signal CalcRDYS3_xcQ : std_logic;
    signal CalcRDYS3_xcCLOCK : std_logic;
    signal CarryFlag0_xcD : std_logic;
    signal CarryFlag0_xcQ : std_logic;
    signal CarryFlag0_xcCLOCK : std_logic;
    signal AddSubFlag0_xcD : std_logic;
    signal AddSubFlag0_xcQ : std_logic;
    signal AddSubFlag0_xcCLOCK : std_logic;
    signal Remainder16_xcD : std_logic;
    signal Remainder16_xcQ : std_logic;
    signal Remainder16_xcCLOCK : std_logic;
    signal Remainder15_xcD : std_logic;
    signal Remainder15_xcQ : std_logic;
    signal Remainder15_xcCLOCK : std_logic;
    signal Remainder14_xcD : std_logic;
    signal Remainder14_xcQ : std_logic;
    signal Remainder14_xcCLOCK : std_logic;
    signal Remainder13_xcD : std_logic;
    signal Remainder13_xcQ : std_logic;
    signal Remainder13_xcCLOCK : std_logic;
    signal Remainder12_xcD : std_logic;
    signal Remainder12_xcQ : std_logic;
    signal Remainder12_xcCLOCK : std_logic;
    signal Remainder11_xcD : std_logic;
    signal Remainder11_xcQ : std_logic;
    signal Remainder11_xcCLOCK : std_logic;
    signal Remainder10_xcD : std_logic;
    signal Remainder10_xcQ : std_logic;
    signal Remainder10_xcCLOCK : std_logic;
    signal Remainder9_xcD : std_logic;
    signal Remainder9_xcQ : std_logic;
    signal Remainder9_xcCLOCK : std_logic;
    signal Remainder8_xcD : std_logic;
    signal Remainder8_xcQ : std_logic;
    signal Remainder8_xcCLOCK : std_logic;
    signal Remainder7_xcD : std_logic;
    signal Remainder7_xcQ : std_logic;
    signal Remainder7_xcCLOCK : std_logic;
    signal Remainder6_xcD : std_logic;
    signal Remainder6_xcQ : std_logic;
    signal Remainder6_xcCLOCK : std_logic;
    signal Remainder5_xcD : std_logic;
    signal Remainder5_xcQ : std_logic;
    signal Remainder5_xcCLOCK : std_logic;
    signal Remainder4_xcD : std_logic;
    signal Remainder4_xcQ : std_logic;
    signal Remainder4_xcCLOCK : std_logic;
    signal Remainder3_xcD : std_logic;
    signal Remainder3_xcQ : std_logic;
    signal Remainder3_xcCLOCK : std_logic;
    signal Remainder2_xcD : std_logic;
    signal Remainder2_xcQ : std_logic;
    signal Remainder2_xcCLOCK : std_logic;
    signal Remainder1_xcD : std_logic;
    signal Remainder1_xcQ : std_logic;
    signal Remainder1_xcCLOCK : std_logic;
    signal Remainder0_xcD : std_logic;
    signal Remainder0_xcQ : std_logic;
    signal Remainder0_xcCLOCK : std_logic;

begin
Calculate_xcOE <=  ('0');
Calculate <= (Calculate_xcBUF) when (Calculate_xcOE = '1') else 'Z';

Divisor_xcOE <=  ('0');
Divisor <= (Divisor_xcBUF) when (Divisor_xcOE = '1') else 'Z';

KeypadRDY_xcOE <=  ('0');
KeypadRDY <= (KeypadRDY_xcBUF) when (KeypadRDY_xcOE = '1') else 'Z';

Keypad0_xcOE <=  ('0');
Keypad0 <= (Keypad0_xcBUF) when (Keypad0_xcOE = '1') else 'Z';

Keypad1_xcOE <=  ('0');
Keypad1 <= (Keypad1_xcBUF) when (Keypad1_xcOE = '1') else 'Z';

Keypad2_xcOE <=  ('0');
Keypad2 <= (Keypad2_xcBUF) when (Keypad2_xcOE = '1') else 'Z';

Keypad3_xcOE <=  ('0');
Keypad3 <= (Keypad3_xcBUF) when (Keypad3_xcOE = '1') else 'Z';

HexDigit0_xcOE <=  ('1');
HexDigit0_xcBUF <= ((DBits47));
HexDigit0 <= (HexDigit0_xcBUF) when (HexDigit0_xcOE = '1') else 'Z';

HexDigit1_xcOE <=  ('1');
HexDigit1_xcBUF <= ((DBits46));
HexDigit1 <= (HexDigit1_xcBUF) when (HexDigit1_xcOE = '1') else 'Z';

HexDigit2_xcOE <=  ('1');
HexDigit2_xcBUF <= ((DBits45));
HexDigit2 <= (HexDigit2_xcBUF) when (HexDigit2_xcOE = '1') else 'Z';

HexDigit3_xcOE <=  ('1');
HexDigit3_xcBUF <= ((DBits44));
HexDigit3 <= (HexDigit3_xcBUF) when (HexDigit3_xcOE = '1') else 'Z';

DecoderEn_xcOE <=  ('1');
DecoderEn_xcBUF <= ('1');
DecoderEn <= (DecoderEn_xcBUF) when (DecoderEn_xcOE = '1') else 'Z';

DecoderBit0_xcCLOCK <=  ((CLK));
DecoderBit0_xcOE <=  ('1');
DecoderBit0_xcD <= not (( not(DecoderBit0) and  not(DigitClkEn) and Reset)
       or  (DecoderBit0 and  not(DecoderBit2) and DigitClkEn and Reset)
       or  (DecoderBit0 and  not(DecoderBit3) and DigitClkEn and Reset)
       or  ( not(DecoderBit1) and  not(DecoderBit2) and DecoderBit3 and DigitClkEn and Reset));
DecoderBit0_B2LINST_1 : G_DEC port map ( Q=>DecoderBit0_xcQ, D=>DecoderBit0_xcD, CLK=>DecoderBit0_xcCLOCK, E=>'1', C=>'0');
DecoderBit0_xcBUF <= DecoderBit0_xcQ;
DecoderBit0 <= (DecoderBit0_xcBUF) when (DecoderBit0_xcOE = '1') else 'Z';

DecoderBit1_xcCLOCK <=  ((CLK));
DecoderBit1_xcOE <=  ('1');
DecoderBit1_xcD <= (( not(Reset))
       or  (DecoderBit0 and DecoderBit1)
       or  (DecoderBit1 and  not(DigitClkEn))
       or  (DecoderBit2 and DecoderBit3 and DigitClkEn)
       or  ( not(DecoderBit0) and  not(DecoderBit1) and  not(DecoderBit3) and DigitClkEn));
DecoderBit1_B2LINST_2 : G_DEC port map ( Q=>DecoderBit1_xcQ, D=>DecoderBit1_xcD, CLK=>DecoderBit1_xcCLOCK, E=>'1', C=>'0');
DecoderBit1_xcBUF <= DecoderBit1_xcQ;
DecoderBit1 <= (DecoderBit1_xcBUF) when (DecoderBit1_xcOE = '1') else 'Z';

DecoderBit2_xcCLOCK <=  ((CLK));
DecoderBit2_xcOE <=  ('1');
DecoderBit2_xcD <= ((DecoderBit0 and DecoderBit2 and Reset)
       or  (DecoderBit1 and DecoderBit2 and Reset)
       or  (DecoderBit2 and  not(DigitClkEn) and Reset)
       or  ( not(DecoderBit0) and  not(DecoderBit1) and  not(DecoderBit2) and DigitClkEn and Reset));
DecoderBit2_B2LINST_3 : G_DEC port map ( Q=>DecoderBit2_xcQ, D=>DecoderBit2_xcD, CLK=>DecoderBit2_xcCLOCK, E=>'1', C=>'0');
DecoderBit2_xcBUF <= DecoderBit2_xcQ;
DecoderBit2 <= (DecoderBit2_xcBUF) when (DecoderBit2_xcOE = '1') else 'Z';

DecoderBit3_xcCLOCK <=  ((CLK));
DecoderBit3_xcOE <=  ('1');
DecoderBit3_xcD <= (( not(DecoderBit2) and DecoderBit3 and Reset)
       or  (DecoderBit3 and  not(DigitClkEn) and Reset)
       or  ( not(DecoderBit0) and  not(DecoderBit1) and DecoderBit2 and  not(DecoderBit3) and DigitClkEn and Reset));
DecoderBit3_B2LINST_4 : G_DEC port map ( Q=>DecoderBit3_xcQ, D=>DecoderBit3_xcD, CLK=>DecoderBit3_xcCLOCK, E=>'1', C=>'0');
DecoderBit3_xcBUF <= DecoderBit3_xcQ;
DecoderBit3 <= (DecoderBit3_xcBUF) when (DecoderBit3_xcOE = '1') else 'Z';

KeypadRDYS1_xcCLOCK <=  ((CLK));
KeypadRDYS1_xcD <= ((KeypadRDY));
KeypadRDYS1_B2LINST_5 : G_DEC port map ( Q=>KeypadRDYS1, D=>KeypadRDYS1_xcD, CLK=>KeypadRDYS1_xcCLOCK, E=>'1', C=>'0');

KeypadRDYS2_xcCLOCK <=  ((CLK));
KeypadRDYS2_xcD <= ((KeypadRDYS1));
KeypadRDYS2_B2LINST_6 : G_DEC port map ( Q=>KeypadRDYS2, D=>KeypadRDYS2_xcD, CLK=>KeypadRDYS2_xcCLOCK, E=>'1', C=>'0');

KeypadRDYS3_xcCLOCK <=  ((CLK));
KeypadRDYS3_xcD <= ((KeypadRDYS2));
KeypadRDYS3_B2LINST_7 : G_DEC port map ( Q=>KeypadRDYS3, D=>KeypadRDYS3_xcD, CLK=>KeypadRDYS3_xcCLOCK, E=>'1', C=>'0');

HaveKey_xcCLOCK <=  ((CLK));
HaveKey_xcD <= not (( not(HaveKey) and  not(KeypadRDYS2))
       or  ( not(HaveKey) and KeypadRDYS3)
       or  (DecoderBit0 and DecoderBit1 and DecoderBit2 and  not(DecoderBit3) and DigitClkEn and Divisor and  not(KeypadRDYS2))
       or  (DecoderBit0 and DecoderBit1 and  not(DecoderBit2) and  not(DecoderBit3) and DigitClkEn and  not(Divisor) and  not(KeypadRDYS2))
       or  (DecoderBit0 and DecoderBit1 and DecoderBit2 and  not(DecoderBit3) and DigitClkEn and Divisor and KeypadRDYS3)
       or  (DecoderBit0 and DecoderBit1 and  not(DecoderBit2) and  not(DecoderBit3) and DigitClkEn and  not(Divisor) and KeypadRDYS3));
HaveKey_B2LINST_8 : G_DEC port map ( Q=>HaveKey, D=>HaveKey_xcD, CLK=>HaveKey_xcCLOCK, E=>'1', C=>'0');

MuxCntr0_xcCLOCK <=  ((CLK));
MuxCntr0_xcD <= (( not(MuxCntr0) and Reset));
MuxCntr0_B2LINST_9 : G_DEC port map ( Q=>MuxCntr0, D=>MuxCntr0_xcD, CLK=>MuxCntr0_xcCLOCK, E=>'1', C=>'0');

MuxCntr1_xcCLOCK <=  ((CLK));
MuxCntr1_xcD <= (( not(MuxCntr0) and MuxCntr1 and Reset)
       or  (MuxCntr0 and  not(MuxCntr1) and Reset));
MuxCntr1_B2LINST_10 : G_DEC port map ( Q=>MuxCntr1, D=>MuxCntr1_xcD, CLK=>MuxCntr1_xcCLOCK, E=>'1', C=>'0');

MuxCntr2_xcCLOCK <=  ((CLK));
MuxCntr2_xcD <= (( not(MuxCntr0) and MuxCntr2 and Reset)
       or  ( not(MuxCntr1) and MuxCntr2 and Reset)
       or  (MuxCntr0 and MuxCntr1 and  not(MuxCntr2) and Reset));
MuxCntr2_B2LINST_11 : G_DEC port map ( Q=>MuxCntr2, D=>MuxCntr2_xcD, CLK=>MuxCntr2_xcCLOCK, E=>'1', C=>'0');

MuxCntr3_xcCLOCK <=  ((CLK));
MuxCntr3_xcD <= (( not(MuxCntr0) and MuxCntr3 and Reset)
       or  ( not(MuxCntr1) and MuxCntr3 and Reset)
       or  ( not(MuxCntr2) and MuxCntr3 and Reset)
       or  (MuxCntr0 and MuxCntr1 and MuxCntr2 and  not(MuxCntr3) and Reset));
MuxCntr3_B2LINST_12 : G_DEC port map ( Q=>MuxCntr3, D=>MuxCntr3_xcD, CLK=>MuxCntr3_xcCLOCK, E=>'1', C=>'0');

MuxCntr4_xcCLOCK <=  ((CLK));
MuxCntr4_xcD <= (( not(MuxCntr0) and MuxCntr4 and Reset)
       or  ( not(MuxCntr1) and MuxCntr4 and Reset)
       or  ( not(MuxCntr2) and MuxCntr4 and Reset)
       or  ( not(MuxCntr3) and MuxCntr4 and Reset)
       or  (MuxCntr0 and MuxCntr1 and MuxCntr2 and MuxCntr3 and  not(MuxCntr4) and Reset));
MuxCntr4_B2LINST_13 : G_DEC port map ( Q=>MuxCntr4, D=>MuxCntr4_xcD, CLK=>MuxCntr4_xcCLOCK, E=>'1', C=>'0');

MuxCntr5_xcCLOCK <=  ((CLK));
MuxCntr5_xcD <= (( not(MuxCntr0) and MuxCntr5 and Reset)
       or  ( not(MuxCntr1) and MuxCntr5 and Reset)
       or  ( not(MuxCntr2) and MuxCntr5 and Reset)
       or  ( not(MuxCntr3) and MuxCntr5 and Reset)
       or  ( not(MuxCntr4) and MuxCntr5 and Reset)
       or  (MuxCntr0 and MuxCntr1 and MuxCntr2 and MuxCntr3 and MuxCntr4 and  not(MuxCntr5) and Reset));
MuxCntr5_B2LINST_14 : G_DEC port map ( Q=>MuxCntr5, D=>MuxCntr5_xcD, CLK=>MuxCntr5_xcCLOCK, E=>'1', C=>'0');

MuxCntr6_xcCLOCK <=  ((CLK));
MuxCntr6_xcD <= (( not(MuxCntr0) and MuxCntr6 and Reset)
       or  ( not(MuxCntr1) and MuxCntr6 and Reset)
       or  ( not(MuxCntr2) and MuxCntr6 and Reset)
       or  ( not(MuxCntr3) and MuxCntr6 and Reset)
       or  ( not(MuxCntr4) and MuxCntr6 and Reset)
       or  ( not(MuxCntr5) and MuxCntr6 and Reset)
       or  (MuxCntr0 and MuxCntr1 and MuxCntr2 and MuxCntr3 and MuxCntr4 and MuxCntr5 and  not(MuxCntr6) and Reset));
MuxCntr6_B2LINST_15 : G_DEC port map ( Q=>MuxCntr6, D=>MuxCntr6_xcD, CLK=>MuxCntr6_xcCLOCK, E=>'1', C=>'0');

MuxCntr7_xcCLOCK <=  ((CLK));
MuxCntr7_xcD <= (( not(MuxCntr0) and MuxCntr7 and Reset)
       or  ( not(MuxCntr1) and MuxCntr7 and Reset)
       or  ( not(MuxCntr2) and MuxCntr7 and Reset)
       or  ( not(MuxCntr3) and MuxCntr7 and Reset)
       or  ( not(MuxCntr4) and MuxCntr7 and Reset)
       or  ( not(MuxCntr5) and MuxCntr7 and Reset)
       or  ( not(MuxCntr6) and MuxCntr7 and Reset)
       or  (MuxCntr0 and MuxCntr1 and MuxCntr2 and MuxCntr3 and MuxCntr4 and MuxCntr5 and MuxCntr6 and  not(MuxCntr7) and Reset));
MuxCntr7_B2LINST_16 : G_DEC port map ( Q=>MuxCntr7, D=>MuxCntr7_xcD, CLK=>MuxCntr7_xcCLOCK, E=>'1', C=>'0');

MuxCntr8_xcCLOCK <=  ((CLK));
MuxCntr8_xcD <= (( not(MuxCntr0) and MuxCntr8 and Reset)
       or  ( not(MuxCntr1) and MuxCntr8 and Reset)
       or  ( not(MuxCntr2) and MuxCntr8 and Reset)
       or  ( not(MuxCntr3) and MuxCntr8 and Reset)
       or  ( not(MuxCntr4) and MuxCntr8 and Reset)
       or  ( not(MuxCntr5) and MuxCntr8 and Reset)
       or  ( not(MuxCntr6) and MuxCntr8 and Reset)
       or  ( not(MuxCntr7) and MuxCntr8 and Reset)
       or  (MuxCntr0 and MuxCntr1 and MuxCntr2 and MuxCntr3 and MuxCntr4 and MuxCntr5 and MuxCntr6 and MuxCntr7 and  not(MuxCntr8) and Reset));
MuxCntr8_B2LINST_17 : G_DEC port map ( Q=>MuxCntr8, D=>MuxCntr8_xcD, CLK=>MuxCntr8_xcCLOCK, E=>'1', C=>'0');

MuxCntr9_xcCLOCK <=  ((CLK));
MuxCntr9_xcD <= (( not(MuxCntr0) and MuxCntr9 and Reset)
       or  ( not(MuxCntr1) and MuxCntr9 and Reset)
       or  ( not(MuxCntr2) and MuxCntr9 and Reset)
       or  ( not(MuxCntr3) and MuxCntr9 and Reset)
       or  ( not(MuxCntr4) and MuxCntr9 and Reset)
       or  ( not(MuxCntr5) and MuxCntr9 and Reset)
       or  ( not(MuxCntr6) and MuxCntr9 and Reset)
       or  ( not(MuxCntr7) and MuxCntr9 and Reset)
       or  ( not(MuxCntr8) and MuxCntr9 and Reset)
       or  (MuxCntr0 and MuxCntr1 and MuxCntr2 and MuxCntr3 and MuxCntr4 and MuxCntr5 and MuxCntr6 and MuxCntr7 and MuxCntr8 and  not(MuxCntr9) and Reset));
MuxCntr9_B2LINST_18 : G_DEC port map ( Q=>MuxCntr9, D=>MuxCntr9_xcD, CLK=>MuxCntr9_xcCLOCK, E=>'1', C=>'0');

DigitClkEn_xcCLOCK <=  ((CLK));
DigitClkEn_xcD <= ((MuxCntr0 and MuxCntr1 and MuxCntr2 and MuxCntr3 and MuxCntr4 and MuxCntr5 and MuxCntr6 and MuxCntr7 and MuxCntr8 and MuxCntr9));
DigitClkEn_B2LINST_19 : G_DEC port map ( Q=>DigitClkEn, D=>DigitClkEn_xcD, CLK=>DigitClkEn_xcCLOCK, E=>'1', C=>'0');

KeyEn_xcCLOCK <=  ((CLK));
KeyEn_xcD <= ((MuxCntr0 and  not(MuxCntr1) and  not(MuxCntr2) and  not(MuxCntr3) and  not(MuxCntr4) and  not(MuxCntr5) and  not(MuxCntr6) and  not(MuxCntr7) and  not(MuxCntr8) and  not(MuxCntr9)));
KeyEn_B2LINST_20 : G_DEC port map ( Q=>KeyEn, D=>KeyEn_xcD, CLK=>KeyEn_xcCLOCK, E=>'1', C=>'0');

InitEn_xcCLOCK <=  ((CLK));
InitEn_xcD <= (( not(MuxCntr0) and  not(MuxCntr1) and  not(MuxCntr2) and  not(MuxCntr3) and  not(MuxCntr4) and  not(MuxCntr5) and  not(MuxCntr6) and  not(MuxCntr7) and  not(MuxCntr8) and  not(MuxCntr9)));
InitEn_B2LINST_21 : G_DEC port map ( Q=>InitEn, D=>InitEn_xcD, CLK=>InitEn_xcCLOCK, E=>'1', C=>'0');

RemainderEn_xcCLOCK <=  ((CLK));
RemainderEn_xcD <= ((MuxCntr0 and  not(MuxCntr1) and  not(MuxCntr2) and  not(MuxCntr3) and  not(MuxCntr4) and  not(MuxCntr5)));
RemainderEn_B2LINST_22 : G_DEC port map ( Q=>RemainderEn, D=>RemainderEn_xcD, CLK=>RemainderEn_xcCLOCK, E=>'1', C=>'0');

AddSubEn_xcCLOCK <=  ((CLK));
AddSubEn_xcD <= ((MuxCntr4 and  not(MuxCntr5)));
AddSubEn_B2LINST_23 : G_DEC port map ( Q=>AddSubEn, D=>AddSubEn_xcD, CLK=>AddSubEn_xcCLOCK, E=>'1', C=>'0');

QuotientEn_xcCLOCK <=  ((CLK));
QuotientEn_xcD <= (( not(MuxCntr0) and  not(MuxCntr1) and  not(MuxCntr2) and  not(MuxCntr3) and  not(MuxCntr4) and MuxCntr5));
QuotientEn_B2LINST_24 : G_DEC port map ( Q=>QuotientEn, D=>QuotientEn_xcD, CLK=>QuotientEn_xcCLOCK, E=>'1', C=>'0');

CarryEn_xcCLOCK <=  ((CLK));
CarryEn_xcD <= ((MuxCntr0 and MuxCntr1 and MuxCntr2 and MuxCntr3 and  not(MuxCntr4) and  not(MuxCntr5)));
CarryEn_B2LINST_25 : G_DEC port map ( Q=>CarryEn, D=>CarryEn_xcD, CLK=>CarryEn_xcCLOCK, E=>'1', C=>'0');

CalcLatch_xcCLOCK <=  ((CLK));
CalcLatch_xcD <= not (( not(CalcLatch) and  not(CalcRDYS2))
       or  ( not(CalcLatch) and CalcRDYS3)
       or  ( not(CalcLatch) and  not(DecoderBit0) and  not(DecoderBit1) and DecoderBit2 and DecoderBit3)
       or  ( not(CalcRDYS2) and DecoderBit0 and DecoderBit1 and  not(DecoderBit2) and  not(DecoderBit3))
       or  (CalcRDYS3 and DecoderBit0 and DecoderBit1 and  not(DecoderBit2) and  not(DecoderBit3)));
CalcLatch_B2LINST_26 : G_DEC port map ( Q=>CalcLatch, D=>CalcLatch_xcD, CLK=>CalcLatch_xcCLOCK, E=>'1', C=>'0');

CalcRDYS1_xcCLOCK <=  ((CLK));
CalcRDYS1_xcD <= (not (Calculate));
CalcRDYS1_B2LINST_27 : G_DEC port map ( Q=>CalcRDYS1, D=>CalcRDYS1_xcD, CLK=>CalcRDYS1_xcCLOCK, E=>'1', C=>'0');

CalcRDYS2_xcCLOCK <=  ((CLK));
CalcRDYS2_xcD <= ((CalcRDYS1));
CalcRDYS2_B2LINST_28 : G_DEC port map ( Q=>CalcRDYS2, D=>CalcRDYS2_xcD, CLK=>CalcRDYS2_xcCLOCK, E=>'1', C=>'0');

CalcRDYS3_xcCLOCK <=  ((CLK));
CalcRDYS3_xcD <= ((CalcRDYS2));
CalcRDYS3_B2LINST_29 : G_DEC port map ( Q=>CalcRDYS3, D=>CalcRDYS3_xcD, CLK=>CalcRDYS3_xcCLOCK, E=>'1', C=>'0');

CalcCond <= ((CalcLatch and  not(DecoderBit0) and  not(DecoderBit1) and DecoderBit2 and DecoderBit3 and  not(DigitClkEn) and  not(HaveKey)));

CarryFlag0_xcCLOCK <=  ((CLK));
CarryFlag0_xcD <= ((AddSubFlag0 and CarryEn)
       or  (CarryFlag0 and  not(Remainder0) and ShiftAddSub)
       or  ( not(AddSubFlag0) and CarryFlag0 and DBits31 and ShiftAddSub)
       or  (AddSubFlag0 and CarryFlag0 and  not(DBits31) and ShiftAddSub)
       or  ( not(AddSubFlag0) and DBits31 and  not(Remainder0) and ShiftAddSub)
       or  (AddSubFlag0 and  not(DBits31) and  not(Remainder0) and ShiftAddSub));
CarryFlag0_B2LINST_30 : G_DEC port map ( Q=>CarryFlag0, D=>CarryFlag0_xcD, CLK=>CarryFlag0_xcCLOCK, E=>'1', C=>'0');

AddSubFlag0_xcCLOCK <=  ((CLK));
AddSubFlag0_xcD <= not (( not(AddSubFlag0) and  not(ShiftQuo))
       or  ( not(AddSubFlag0) and CarryFlag0 and Remainder16)
       or  ( not(AddSubFlag0) and  not(CarryFlag0) and  not(Remainder16))
       or  (AddSubFlag0 and  not(CarryFlag0) and Remainder16 and ShiftQuo)
       or  (AddSubFlag0 and CarryFlag0 and  not(Remainder16) and ShiftQuo)
       or  ( not(AddSubFlag0) and CARRY_1 and  not(Calculate) and  not(DecoderBit0) and  not(DecoderBit1) and DecoderBit2 and DecoderBit3 and  not(MuxCntr8) and  not(MuxCntr9))
       or  (CARRY_1 and  not(Calculate) and  not(DecoderBit0) and  not(DecoderBit1) and DecoderBit2 and DecoderBit3 and  not(MuxCntr8) and  not(MuxCntr9) and ShiftQuo)
       or  (CARRY_0 and  not(Calculate) and  not(DecoderBit0) and  not(DecoderBit1) and DecoderBit2 and DecoderBit3 and  not(MuxCntr8) and  not(MuxCntr9) and  not(ShiftQuo)));
AddSubFlag0_B2LINST_31 : G_DEC port map ( Q=>AddSubFlag0, D=>AddSubFlag0_xcD, CLK=>AddSubFlag0_xcCLOCK, E=>'1', C=>'0');

NewKey0 <= (( not(Keypad0) and  not(Keypad1))
       or  ( not(Keypad0) and Keypad3)
       or  ( not(Keypad1) and Keypad3));

NewKey1 <= (( not(Keypad0) and Keypad1 and Keypad2)
       or  (Keypad0 and  not(Keypad1) and Keypad2)
       or  ( not(Keypad0) and  not(Keypad1) and Keypad3)
       or  (Keypad1 and Keypad2 and  not(Keypad3))
       or  (Keypad0 and Keypad1 and  not(Keypad2) and Keypad3));

NewKey2 <= (( not(Keypad1) and  not(Keypad3))
       or  (Keypad0 and  not(Keypad1) and Keypad2)
       or  ( not(Keypad0) and  not(Keypad2) and  not(Keypad3))
       or  ( not(Keypad0) and Keypad1 and Keypad2 and Keypad3)
       or  (Keypad0 and Keypad1 and  not(Keypad2) and Keypad3));

NewKey3 <= (NewKey3_xcX1  xor  NewKey3_xcX2);
NewKey3_xcX1 <= ((Keypad0));
NewKey3_xcX2 <= ((Keypad2));

Remainder16_xcCLOCK <=  ((CLK));
Remainder16_xcD <= ((Remainder16 and ShiftAddSub)
       or  (Remainder16 and ShiftDisplay)
       or  (Remainder16 and ShiftHold)
       or  (Remainder16 and ShiftKeyIn)
       or  (Remainder15 and ShiftRem)
       or  (AddSubFlag0 and CarryFlag0 and Remainder16 and ShiftQuo)
       or  ( not(AddSubFlag0) and  not(CarryFlag0) and Remainder16 and ShiftQuo)
       or  ( not(AddSubFlag0) and CarryFlag0 and  not(Remainder16) and ShiftQuo)
       or  (AddSubFlag0 and  not(CarryFlag0) and  not(Remainder16) and ShiftQuo));
Remainder16_B2LINST_32 : G_DEC port map ( Q=>Remainder16, D=>Remainder16_xcD, CLK=>Remainder16_xcCLOCK, E=>'1', C=>'0');

Remainder15_xcCLOCK <=  ((CLK));
Remainder15_xcD <= ((Remainder15 and ShiftDisplay)
       or  (Remainder15 and ShiftHold)
       or  (Remainder15 and ShiftKeyIn)
       or  (Remainder15 and ShiftQuo)
       or  (Remainder14 and ShiftRem)
       or  ( not(AddSubFlag0) and CarryFlag0 and DBits31 and Remainder0 and ShiftAddSub)
       or  (AddSubFlag0 and  not(CarryFlag0) and DBits31 and Remainder0 and ShiftAddSub)
       or  (AddSubFlag0 and CarryFlag0 and  not(DBits31) and Remainder0 and ShiftAddSub)
       or  ( not(AddSubFlag0) and  not(CarryFlag0) and  not(DBits31) and Remainder0 and ShiftAddSub)
       or  (AddSubFlag0 and CarryFlag0 and DBits31 and  not(Remainder0) and ShiftAddSub)
       or  ( not(AddSubFlag0) and  not(CarryFlag0) and DBits31 and  not(Remainder0) and ShiftAddSub)
       or  ( not(AddSubFlag0) and CarryFlag0 and  not(DBits31) and  not(Remainder0) and ShiftAddSub)
       or  (AddSubFlag0 and  not(CarryFlag0) and  not(DBits31) and  not(Remainder0) and ShiftAddSub));
Remainder15_B2LINST_33 : G_DEC port map ( Q=>Remainder15, D=>Remainder15_xcD, CLK=>Remainder15_xcCLOCK, E=>'1', C=>'0');

Remainder14_xcCLOCK <=  ((CLK));
Remainder14_xcD <= ((Remainder15 and ShiftAddSub)
       or  (Remainder14 and ShiftDisplay)
       or  (Remainder14 and ShiftHold)
       or  (Remainder14 and ShiftKeyIn)
       or  (Remainder14 and ShiftQuo)
       or  (Remainder13 and ShiftRem));
Remainder14_B2LINST_34 : G_DEC port map ( Q=>Remainder14, D=>Remainder14_xcD, CLK=>Remainder14_xcCLOCK, E=>'1', C=>'0');

Remainder13_xcCLOCK <=  ((CLK));
Remainder13_xcD <= ((Remainder14 and ShiftAddSub)
       or  (Remainder13 and ShiftDisplay)
       or  (Remainder13 and ShiftHold)
       or  (Remainder13 and ShiftKeyIn)
       or  (Remainder13 and ShiftQuo)
       or  (Remainder12 and ShiftRem));
Remainder13_B2LINST_35 : G_DEC port map ( Q=>Remainder13, D=>Remainder13_xcD, CLK=>Remainder13_xcCLOCK, E=>'1', C=>'0');

Remainder12_xcCLOCK <=  ((CLK));
Remainder12_xcD <= ((Remainder13 and ShiftAddSub)
       or  (Remainder12 and ShiftDisplay)
       or  (Remainder12 and ShiftHold)
       or  (Remainder12 and ShiftKeyIn)
       or  (Remainder12 and ShiftQuo)
       or  (Remainder11 and ShiftRem));
Remainder12_B2LINST_36 : G_DEC port map ( Q=>Remainder12, D=>Remainder12_xcD, CLK=>Remainder12_xcCLOCK, E=>'1', C=>'0');

Remainder11_xcCLOCK <=  ((CLK));
Remainder11_xcD <= ((Remainder12 and ShiftAddSub)
       or  (Remainder11 and ShiftDisplay)
       or  (Remainder11 and ShiftHold)
       or  (Remainder11 and ShiftKeyIn)
       or  (Remainder11 and ShiftQuo)
       or  (Remainder10 and ShiftRem));
Remainder11_B2LINST_37 : G_DEC port map ( Q=>Remainder11, D=>Remainder11_xcD, CLK=>Remainder11_xcCLOCK, E=>'1', C=>'0');

Remainder10_xcCLOCK <=  ((CLK));
Remainder10_xcD <= ((Remainder11 and ShiftAddSub)
       or  (Remainder10 and ShiftDisplay)
       or  (Remainder10 and ShiftHold)
       or  (Remainder10 and ShiftKeyIn)
       or  (Remainder10 and ShiftQuo)
       or  (Remainder9 and ShiftRem));
Remainder10_B2LINST_38 : G_DEC port map ( Q=>Remainder10, D=>Remainder10_xcD, CLK=>Remainder10_xcCLOCK, E=>'1', C=>'0');

Remainder9_xcCLOCK <=  ((CLK));
Remainder9_xcD <= ((Remainder10 and ShiftAddSub)
       or  (Remainder9 and ShiftDisplay)
       or  (Remainder9 and ShiftHold)
       or  (Remainder9 and ShiftKeyIn)
       or  (Remainder9 and ShiftQuo)
       or  (Remainder8 and ShiftRem));
Remainder9_B2LINST_39 : G_DEC port map ( Q=>Remainder9, D=>Remainder9_xcD, CLK=>Remainder9_xcCLOCK, E=>'1', C=>'0');

Remainder8_xcCLOCK <=  ((CLK));
Remainder8_xcD <= ((Remainder9 and ShiftAddSub)
       or  (Remainder8 and ShiftDisplay)
       or  (Remainder8 and ShiftHold)
       or  (Remainder8 and ShiftKeyIn)
       or  (Remainder8 and ShiftQuo)
       or  (Remainder7 and ShiftRem));
Remainder8_B2LINST_40 : G_DEC port map ( Q=>Remainder8, D=>Remainder8_xcD, CLK=>Remainder8_xcCLOCK, E=>'1', C=>'0');

Remainder7_xcCLOCK <=  ((CLK));
Remainder7_xcD <= ((Remainder8 and ShiftAddSub)
       or  (Remainder7 and ShiftDisplay)
       or  (Remainder7 and ShiftHold)
       or  (Remainder7 and ShiftKeyIn)
       or  (Remainder7 and ShiftQuo)
       or  (Remainder6 and ShiftRem));
Remainder7_B2LINST_41 : G_DEC port map ( Q=>Remainder7, D=>Remainder7_xcD, CLK=>Remainder7_xcCLOCK, E=>'1', C=>'0');

Remainder6_xcCLOCK <=  ((CLK));
Remainder6_xcD <= ((Remainder7 and ShiftAddSub)
       or  (Remainder6 and ShiftDisplay)
       or  (Remainder6 and ShiftHold)
       or  (Remainder6 and ShiftKeyIn)
       or  (Remainder6 and ShiftQuo)
       or  (Remainder5 and ShiftRem));
Remainder6_B2LINST_42 : G_DEC port map ( Q=>Remainder6, D=>Remainder6_xcD, CLK=>Remainder6_xcCLOCK, E=>'1', C=>'0');

Remainder5_xcCLOCK <=  ((CLK));
Remainder5_xcD <= ((Remainder6 and ShiftAddSub)
       or  (Remainder5 and ShiftDisplay)
       or  (Remainder5 and ShiftHold)
       or  (Remainder5 and ShiftKeyIn)
       or  (Remainder5 and ShiftQuo)
       or  (Remainder4 and ShiftRem));
Remainder5_B2LINST_43 : G_DEC port map ( Q=>Remainder5, D=>Remainder5_xcD, CLK=>Remainder5_xcCLOCK, E=>'1', C=>'0');

Remainder4_xcCLOCK <=  ((CLK));
Remainder4_xcD <= ((Remainder5 and ShiftAddSub)
       or  (Remainder4 and ShiftDisplay)
       or  (Remainder4 and ShiftHold)
       or  (Remainder4 and ShiftKeyIn)
       or  (Remainder4 and ShiftQuo)
       or  (Remainder3 and ShiftRem));
Remainder4_B2LINST_44 : G_DEC port map ( Q=>Remainder4, D=>Remainder4_xcD, CLK=>Remainder4_xcCLOCK, E=>'1', C=>'0');

Remainder3_xcCLOCK <=  ((CLK));
Remainder3_xcD <= ((Remainder4 and ShiftAddSub)
       or  (Remainder3 and ShiftDisplay)
       or  (Remainder3 and ShiftHold)
       or  (Remainder3 and ShiftKeyIn)
       or  (Remainder3 and ShiftQuo)
       or  (Remainder2 and ShiftRem));
Remainder3_B2LINST_45 : G_DEC port map ( Q=>Remainder3, D=>Remainder3_xcD, CLK=>Remainder3_xcCLOCK, E=>'1', C=>'0');

Remainder2_xcCLOCK <=  ((CLK));
Remainder2_xcD <= ((Remainder3 and ShiftAddSub)
       or  (Remainder2 and ShiftDisplay)
       or  (Remainder2 and ShiftHold)
       or  (Remainder2 and ShiftKeyIn)
       or  (Remainder2 and ShiftQuo)
       or  (Remainder1 and ShiftRem));
Remainder2_B2LINST_46 : G_DEC port map ( Q=>Remainder2, D=>Remainder2_xcD, CLK=>Remainder2_xcCLOCK, E=>'1', C=>'0');

Remainder1_xcCLOCK <=  ((CLK));
Remainder1_xcD <= ((Remainder2 and ShiftAddSub)
       or  (Remainder1 and ShiftDisplay)
       or  (Remainder1 and ShiftHold)
       or  (Remainder1 and ShiftKeyIn)
       or  (Remainder1 and ShiftQuo)
       or  (Remainder0 and ShiftRem));
Remainder1_B2LINST_47 : G_DEC port map ( Q=>Remainder1, D=>Remainder1_xcD, CLK=>Remainder1_xcCLOCK, E=>'1', C=>'0');

Remainder0_xcCLOCK <=  ((CLK));
Remainder0_xcD <= ((Remainder1 and ShiftAddSub)
       or  (Remainder0 and ShiftDisplay)
       or  (Remainder0 and ShiftHold)
       or  (Remainder0 and ShiftKeyIn)
       or  (Remainder0 and ShiftQuo)
       or  (DBits32 and ShiftRem));
Remainder0_B2LINST_48 : G_DEC port map ( Q=>Remainder0, D=>Remainder0_xcD, CLK=>Remainder0_xcCLOCK, E=>'1', C=>'0');

DBits0 <= ((DBits0));

DBits1 <= ((DBits1));

DBits2 <= ((DBits2));

DBits3 <= ((DBits3));

DBits4 <= ((DBits4));

DBits5 <= ((DBits5));

DBits6 <= ((DBits6));

DBits7 <= ((DBits7));

DBits8 <= ((DBits8));

DBits9 <= ((DBits9));

DBits10 <= ((DBits10));

DBits11 <= ((DBits11));

DBits12 <= ((DBits12));

DBits13 <= ((DBits13));

DBits14 <= ((DBits14));

DBits15 <= ((DBits15));

DBits16 <= ((DBits16));

DBits17 <= ((DBits17));

DBits18 <= ((DBits18));

DBits19 <= ((DBits19));

DBits20 <= ((DBits20));

DBits21 <= ((DBits21));

DBits22 <= ((DBits22));

DBits23 <= ((DBits23));

DBits24 <= ((DBits24));

DBits25 <= ((DBits25));

DBits26 <= ((DBits26));

DBits27 <= ((DBits27));

DBits28 <= ((DBits28));

DBits29 <= ((DBits29));

DBits30 <= ((DBits30));

DBits31 <= ((DBits31));

DBits32 <= ((DBits32));

DBits33 <= ((DBits33));

DBits34 <= ((DBits34));

DBits35 <= ((DBits35));

DBits36 <= ((DBits36));

DBits37 <= ((DBits37));

DBits38 <= ((DBits38));

DBits39 <= ((DBits39));

DBits40 <= ((DBits40));

DBits41 <= ((DBits41));

DBits42 <= ((DBits42));

DBits43 <= ((DBits43));

DBits44 <= ((DBits44));

DBits45 <= ((DBits45));

DBits46 <= ((DBits46));

DBits47 <= ((DBits47));

ShiftHold <= (( not(ShiftAddSub) and  not(ShiftDisplay) and  not(ShiftInit) and  not(ShiftKeyIn) and  not(ShiftQuo) and  not(ShiftRem)));

ShiftKeyIn <= (( not(CalcLatch) and DecoderBit0 and DecoderBit1 and DecoderBit2 and  not(DecoderBit3) and  not(DigitClkEn) and Divisor and HaveKey and KeyEn)
       or  ( not(CalcLatch) and DecoderBit0 and DecoderBit1 and  not(DecoderBit2) and  not(DecoderBit3) and  not(DigitClkEn) and  not(Divisor) and HaveKey and KeyEn));

ShiftDisplay <= not (( not(DigitClkEn))
       or  ( not(DecoderBit0) and  not(DecoderBit1) and DecoderBit2 and DecoderBit3));

ShiftAddSub <= ((AddSubEn and CalcCond));

ShiftInit <= ((CalcCond and InitEn));

ShiftRem <= ((CalcCond and RemainderEn));

ShiftQuo <= ((CalcCond and QuotientEn));

CARRY_0 <= (( not(MuxCntr0) and  not(MuxCntr1) and  not(MuxCntr2) and  not(MuxCntr3) and MuxCntr4 and  not(MuxCntr5) and  not(MuxCntr6) and  not(MuxCntr7)));

CARRY_1 <= (( not(MuxCntr0) and  not(MuxCntr1) and  not(MuxCntr2) and  not(MuxCntr3) and MuxCntr4 and  not(MuxCntr5) and  not(MuxCntr6) and  not(MuxCntr7)));

end equation;
